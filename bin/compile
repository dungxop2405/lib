#!/usr/bin/env bash
# bin/compile <build-dir> <cache-dir>

# fail fast
set -e

# parse params
BUILD_DIR=$1
CACHE_DIR=$2

OPENCV_PACKAGE="https://s3-us-west-2.amazonaws.com/cdn.thegrid.io/caliper/opencv-build-0.0.1.tar.gz"
OPENCV_PACKAGE_ETAG=$(curl -s --head "$OPENCV_PACKAGE" | grep -Ei '^etag' | sed -r 's/^etag|[^a-zA-Z0-9]+//gi')
VENDORED_OPENCV="/app/vendor/opencv"
OPENCV_CACHE="$CACHE_DIR/opencv_$OPENCV_PACKAGE_ETAG";

if [ -d "$OPENCV_CACHE" ]; then
  echo "-----> Reusing cached OpenCV ($OPENCV_PACKAGE_ETAG)"
  cp -a $OPENCV_CACHE $VENDORED_OPENCV
else
  echo "-----> Fetching and caching OpenCV ($OPENCV_PACKAGE_ETAG)"
  mkdir -p $VENDORED_OPENCV
  curl $OPENCV_PACKAGE -s -o - | tar xzf - -C $VENDORED_OPENCV
  mkdir -p $CACHE_DIR
  cp -a $VENDORED_OPENCV $OPENCV_CACHE
fi

# vendor
echo "-----> Vendoring OpenCV shared objects into slug"
VENDORED_SO="$BUILD_DIR/vendor/opencv/lib"
mkdir -p $VENDORED_SO
cp -a "$VENDORED_OPENCV/lib/." $VENDORED_SO

export PKG_CONFIG_PATH="/app/vendor/opencv/lib/pkgconfig:$PKG_CONFIG_PATH"
export LD_LIBRARY_PATH="/app/vendor/opencv/lib:$LD_LIBRARY_PATH"

cat <<EOF > export
export LD_LIBRARY_PATH="\$LD_LIBRARY_PATH:$LD_LIBRARY_PATH"
export PKG_CONFIG_PATH="\$PKG_CONFIG_PATH:$PKG_CONFIG_PATH"
EOF

# runtime
mkdir -p "$BUILD_DIR/.profile.d"
echo "export LD_LIBRARY_PATH=\"/app/vendor/opencv/lib:\$LD_LIBRARY_PATH\"" > $BUILD_DIR/.profile.d/opencv.sh
echo "export PKG_CONFIG_PATH=\"/app/vendor/opencv/lib/pkgconfig:\$PKG_CONFIG_PATH\"" >> $BUILD_DIR/.profile.d/opencv.sh

